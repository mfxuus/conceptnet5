import os
PROJECT_DIR = 'E:\\3_Courses\\conceptnet5\\'
SUBPROJECT_DIR = os.path.join(PROJECT_DIR, 'edge_management')
LOCAL_DATA_DIR = os.path.join(SUBPROJECT_DIR, 'local_data')
ORIGINAL_CSV = os.path.join(LOCAL_DATA_DIR, 'assertions.csv')
EN_CSV = os.path.join(LOCAL_DATA_DIR, 'assertions_en.csv')
ORIGINAL_NUMBER_BATCH_EN = os.path.join(LOCAL_DATA_DIR, 'numberbatch-en.txt')
ORIGINAL_NUMBER_BATCH_EN_HDF = os.path.join(LOCAL_DATA_DIR, 'numberbatch-en.h5')

import pandas as pd

# df = pd.read_csv(ORIGINAL_NUMBER_BATCH_EN, sep=" ", skiprows=[0], header=None)
# df = df.set_index(0)
# df = df[df.index.notnull()]
# df.to_hdf(ORIGINAL_NUMBER_BATCH_EN_HDF, 'mat', mode='w', encoding='utf-8')

# bunch of setup stuff; installing pip packages & HDF
# changed a few lines manually (which probably means I'm doing something wrong..)
# For example: sparse_matrix_builder.build_from_conceptnet_table says it's expecting
# "tab-separated association data from ConceptNet"; I haven't found what that format is
# and how it's generated, so I modified a few lines so that it reads in the data in raw/original
# asssertions.csv format. This is probably why I'm seeing some weird outputs below
from vectors.retrofit import sharded_retrofit, join_shards

# just whatever name you want to name your output
NB_OUTPUT = os.path.join(LOCAL_DATA_DIR, 'retrofit-nb')
'''
ORIGINAL_NUMBER_BATCH_EN_HDF:
    - Downloaded the en-only numberbatch.txt
        and saved it to hdf format at the specified location
EN_CSV:
    - the english subset of the original assertins.csv
        generated by 3_get_partial_data.py Fei uploaded, with minor modifications
'''

sharded_retrofit(ORIGINAL_NUMBER_BATCH_EN_HDF, EN_CSV, NB_OUTPUT)
join_shards(NB_OUTPUT)

# Result:





# NB_OUTPUT
df = pd.read_hdf(NB_OUTPUT, 'mat', encoding='utf-8')

# df = pd.read_hdf(ORIGINAL_NUMBER_BATCH_EN_HDF, 'mat', encoding='utf-8')
# import numpy as np
# import math
# for x in df.index:
#     if type(x) is str:
#         continue
#     if np.isnan(x) or math.isnan(x):
#         print(x)